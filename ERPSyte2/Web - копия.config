<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <appSettings />
  <connectionStrings>
    <add name="ERPcs" providerName="System.Data.OleDb" connectionString="Persist Security Info=False;User ID=pr_int_user;Password=.pdthm;Data Source=SL-DB-SRV;Initial Catalog=Erp_App;" />
    <add name="MS2cs" providerName="System.Data.OleDb" connectionString="Persist Security Info=False;User ID=el_mission;Password=mis32pwd;Data Source=SQL2-SRV;Initial Catalog=El_All;" />
  </connectionStrings>
  <system.web>
    <compilation debug="true" targetFramework="4.0" />
    <authentication mode="Windows" />
    <!--<authorization>
          <deny users="?"/>
          <allow users="*"/>
      </authorization>-->
    <!--
            Раздел <customErrors> служит для настройки действий, 
            выполняемых при возникновении необрабатываемой 
            ошибки во время выполнения запроса. В частности, 
            разработчик может задать HTML-страницы ошибок 
            для отображения вместо трассировки ошибки в стеке.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <customErrors mode="Off" />
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID" />
  </system.web>
  <system.diagnostics>
    <sources>
      <source propagateActivity="true" name="System.ServiceModel" switchValue="Off, ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="xml">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="CardSpace">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="xml">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.IO.Log">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="xml">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.Runtime.Serialization">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="xml">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.IdentityModel">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="xml">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="UserTraceSource" switchValue="Information, ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="xml">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Warning,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelMessageLoggingListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="\\sl-db-srv\c$\temp\log\Traces.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="xml" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack">
        <filter type="" />
      </add>
      <add initializeData="c:\temp\log\messages.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelMessageLoggingListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack">
        <filter type="" />
      </add>
    </sharedListeners>
    <trace autoflush="false" />
  </system.diagnostics>
  <system.serviceModel>
    <diagnostics wmiProviderEnabled="false" performanceCounters="Off">
      <messageLogging logEntireMessage="true" logKnownPii="true" logMalformedMessages="false" logMessagesAtServiceLevel="false" logMessagesAtTransportLevel="false" />
    </diagnostics>
    <behaviors>
      <endpointBehaviors>
        <!--To make your WCF service RESTful, you will have to use WebHttp along with WebHttpBinding-->
        <behavior name="webBehavior">
          <webHttp helpEnabled="true" />
        </behavior>
        <!--To access your service from AJAX pages, you will have to use enableWebScript-->
        <behavior name="ajaxBehavior">
          <enableWebScript />
        </behavior>
        <!--x3-->
        <behavior name="soapBehavior" />
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="serviceBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <standardEndpoints>
      <webHttpEndpoint>
         <!--the "" standard endpoint is used by WebServiceHost for auto creating a web endpoint.--> 
        <standardEndpoint name="" helpEnabled="true" faultExceptionEnabled="true" automaticFormatSelectionEnabled="true" />
      </webHttpEndpoint>
    </standardEndpoints>
    <bindings>
      <webHttpBinding>
        <binding>
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
        </binding>
      </webHttpBinding>
      <basicHttpBinding>
        <binding name="httpBinding">
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
        </binding>
      </basicHttpBinding>
      <!--<wsHttpBinding>
        <binding name="NoSecurity">
          <security mode="None"/>
        </binding>
      </wsHttpBinding>-->
    </bindings>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
    <services>
      <service behaviorConfiguration="serviceBehavior" name="ERPSyte2.Services.WCFService">
        <endpoint address=""     binding="webHttpBinding"   name="rest" contract="ERPSyte2.Services.IJSONService" behaviorConfiguration="webBehavior" />
        <endpoint address="json" binding="webHttpBinding"   name="json" contract="ERPSyte2.Services.IJSONService" behaviorConfiguration="webBehavior" />
        <endpoint address="xml"  binding="webHttpBinding"   name="xml"  contract="ERPSyte2.Services.IXMLService"  behaviorConfiguration="webBehavior" />
        <endpoint address="ajax" binding="webHttpBinding"   name="ajax" contract="ERPSyte2.Services.IAJAXService" behaviorConfiguration="ajaxBehavior" />
        <endpoint address="soap" binding="basicHttpBinding" name="soap" contract="ERPSyte2.Services.ISOAPService" behaviorConfiguration="soapBehavior" bindingConfiguration="httpBinding" />
        <endpoint address="mex"  binding="mexHttpBinding"   name="mex"  contract="IMetadataExchange" />
      </service>
    </services>
  </system.serviceModel>
</configuration>